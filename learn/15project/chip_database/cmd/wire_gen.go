// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"chip_database/conf"
	"chip_database/internal/data/db"
	"chip_database/internal/data/http"
	"chip_database/internal/kernel"
	"chip_database/internal/route"
	"chip_database/internal/server"
	"chip_database/internal/service"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func initApp(eneing *gin.Engine, c *conf.WebServerConfig, sqliteC *conf.SqliteDatabaseConfig, fileHandleProxyC *conf.FileHandleProxyConfig) (*kernal.Kernel, error) {
	client, err := db.NewClient(sqliteC)
	if err != nil {
		return nil, err
	}
	baseInfo := db.NewBaseInfo(client)
	baseInfoService := service.NewBaseInfoService(baseInfo)
	testItem := db.NewTestItem(client)
	testItemService := service.NewTestItemService(testItem)
	serverBaseInfo := server.NewBaseInfo(baseInfoService, testItemService)
	source := db.NewSource(client)
	fileHandleProxy := http.NewFileHandleProxy(fileHandleProxyC)
	sourceService := service.NewSourceService(source, fileHandleProxy)
	serverTestItem := server.NewTestItem(testItemService, sourceService)
	serverSource := server.NewSource(sourceService)
	apiRouter := route.NewApiRouter(eneing, serverBaseInfo, serverTestItem, serverSource)
	kernel := kernal.New(eneing, c, apiRouter)
	return kernel, nil
}
