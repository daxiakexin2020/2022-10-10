package main

func main() {

	/*
				https://www.topgoer.cn/docs/gozhuanjia/chapter044.2-garbage_collection
				  三色标记法+混合写屏障（插入写屏障、删除写屏障，取其优点）

					白色： 最初的对象，最终要被回收的对象  最终还存在的对象则需要被GC
					灰色： 相当于中间变量，代表被引用着    最终应该为空才对
					黑色： 需要被保留的对象
					1、所有对象都是白色的，从根节点开始扫描，例如：todo 根对象a 引用了A对象、B对象，那么，将A、B置为灰色
					2、扫描灰色对象，A没有引用其他对象，转为黑色对象，B引用了D对象，则B转为黑色的同时，还要将D对象转为灰色，todo 灰色对象就是临时中间状态，最终都会变为黑色
					3、todo 重复1-2，直到灰色对象为空，白色对象则为需要被回收的对象
					4、最终黑色的对象会被保留下来，白色对象会被回收掉，灰色对象只是一种中间状态。

					垃圾回收触发的机制
						1、达到阀值，每次分配内存都会检测是否达到阀值
						2、定期触发，最长2分钟触发
						3、手动触发，runtinme.GC()
		+
					条件1：黑色对象引用了白色对象
					条件2：灰色对象失去了对白色对象的引用
					如果以上条件同时成立，则可能会将白色对象误回收，因此写屏障，删除屏障，都是为了保证对象不被误回收

					强3色：不允许黑色对象应用白色对象
					弱3色：白色对象的上游必须有灰色对象持有
						强弱3色，目的就时为了破坏以上2个条件之一，防止GC时，白色对象还在被使用，而被GC掉
					具体实现就是各种屏障技术：
						各种屏障，其实目的只有一个，那就是减少STW的时间，虽然不能完全消除，但是可以大大减少STW的时间。
							插入写屏障，插入时，强制将引用的白色对象标记为黑色
								新增对象时，标记为灰色
							删除屏障，
								删除对象时，标记为不管时白色还是灰色，标记为灰色
							混合屏障


	*/
}
