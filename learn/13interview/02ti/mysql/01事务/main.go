package main

func main() {

}

func test() {

	//ACID

	/**
	原子性
	保证每个事务都是不可分割的，要么全部成功，要么全部失败，回滚到最初事务的样子
	undo log保证了事务的原子性
	*/

	/**
	一致性
	总是使得数据库从一种一致性状态转移到另外一种一致性的状态
	一致性由其他三大特性保证，程序代码要保证业务上的一致性
	redo log
	*/

	/**
	隔离性
	每个事务之间互相不影响
	MVCC来保证隔离性
	*/

	/**
	持久性
	这个事务一旦提交，一定是有效的
		使用redo log 进行保证
	*/

	/**
	隔离级别
		读未提交
			容易产生脏读，脏读：A事物已经更新了一份数据，B事物读取了其数据，但是A事物进行了RollBack，则B事务读取到的就是脏数据
		读已提交
			可以解决脏读
		可重复读
			容易产生幻读，解决MVCC+间隙锁
		序列化
	*/

	/**
	各种读问题
		幻读：可重复读，容易产生幻读，2次查询同一个范围内的数据，数量不一致，一般指新插入的行
				问题：破坏数据的一致性
				解决：加间隙锁，锁住行与行之间的间隙
	*/
}
